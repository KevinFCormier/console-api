// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Platform Api Resolver Correctly Resolves Create Cloud Connection 1`] = `
Object {
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 121,
          "line": 3,
        },
      ],
      "message": "Syntax Error: Unterminated string.",
    },
  ],
}
`;

exports[`Platform Api Resolver Correctly Resolves Delete Cloud Connection 1`] = `
Object {
  "data": Object {
    "deleteCloudConnection": null,
  },
}
`;

exports[`Platform Api Resolver Correctly Resolves Edit Cloud Connection 1`] = `
Object {
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 119,
          "line": 3,
        },
      ],
      "message": "Syntax Error: Unterminated string.",
    },
  ],
}
`;

exports[`Platform Api Resolver Correctly Resolves Get Cloud Connections 1`] = `
Object {
  "data": Object {
    "connections": Array [
      Object {
        "metadata": Object {
          "name": null,
          "name_namespace": null,
          "namespace": null,
          "provider": null,
        },
      },
    ],
  },
}
`;

exports[`Platform Api Resolver Correctly Resolves Get Cloud Providers 1`] = `
Object {
  "data": Object {
    "providers": Array [
      Object {
        "clusterMetadata": "",
        "clusterValues": "",
        "configMetadata": "",
        "configValues": "",
        "longname": "iks-test",
        "name": "iks-test",
        "statusCode": 200,
      },
    ],
  },
}
`;

exports[`Platform Api Resolver Create Kubernetes Cluster Resource for Import 1`] = `
Object {
  "data": Object {
    "createClusterResource": Object {
      "error": Object {
        "rawResponse": Object {
          "apiVersion": "clusterregistry.k8s.io/v1alpha1",
          "items": Array [
            Object {
              "apiVersion": "clusterregistry.k8s.io/v1alpha1",
              "kind": "Cluster",
              "metadata": Object {
                "annotations": Object {
                  "mcm.ibm.com/user-group": "c3lzdGVtOnNlcnZpY2VhY2NvdW50cyxzeXN0ZW06c2VydmljZWFjY291bnRzOmt1YmUtc3lzdGVtLHN5c3RlbTphdXRoZW50aWNhdGVk",
                  "mcm.ibm.com/user-identity": "c3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRlZmF1bHQ=",
                },
                "creationTimestamp": "2018-08-13T16:56:41Z",
                "finalizers": Array [
                  "finalizer.hcm.ibm.com",
                ],
                "labels": Object {
                  "cloud": "IBM",
                  "datacenter": "toronto",
                  "environment": "Dev",
                  "name": "mycluster.icp",
                  "owner": "marketing",
                  "region": "US",
                  "vendor": "ICP",
                },
                "name": "mycluster.icp",
                "namespace": "default",
                "resourceVersion": "136558",
                "selfLink": "/apis/clusterregistry.k8s.io/v1alpha1/namespaces/default/clusters/mycluster.icp",
                "uid": "d9f3a5aa-9f19-11e8-855e-f2b998610544",
              },
              "spec": Object {
                "authInfo": Object {},
                "kubernetesApiEndpoints": Object {
                  "serverEndpoints": Array [
                    Object {
                      "serverAddress": "9.42.80.212:8001",
                    },
                  ],
                },
              },
              "status": Object {
                "conditions": Array [
                  Object {
                    "lastHeartbeatTime": "2018-08-15T19:41:20Z",
                    "lastTransitionTime": null,
                    "status": "",
                    "type": "OK",
                  },
                ],
              },
            },
          ],
          "kind": "ClusterList",
          "metadata": Object {
            "resourceVersion": "136667",
            "selfLink": "/apis/clusterregistry.k8s.io/v1alpha1/clusters",
          },
          "statusCode": "",
          "statusMessage": "",
        },
        "statusCode": "",
      },
    },
  },
}
`;

exports[`Platform Api Resolver Create Kubernetes Cluster Resource for Import should return error msg 1`] = `
Object {
  "data": Object {
    "createClusterResource": null,
  },
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 13,
          "line": 3,
        },
      ],
      "message": "Body is required for createClusterResource",
      "path": Array [
        "createClusterResource",
      ],
    },
  ],
}
`;

exports[`Platform Api Resolver Get Automated Import Status 1`] = `
Object {
  "data": Object {
    "getAutomatedImportStatus": Object {
      "error": Object {
        "rawResponse": Object {
          "apiVersion": "clusterregistry.k8s.io/v1alpha1",
          "items": Array [
            Object {
              "apiVersion": "clusterregistry.k8s.io/v1alpha1",
              "kind": "Cluster",
              "metadata": Object {
                "annotations": Object {
                  "mcm.ibm.com/user-group": "c3lzdGVtOnNlcnZpY2VhY2NvdW50cyxzeXN0ZW06c2VydmljZWFjY291bnRzOmt1YmUtc3lzdGVtLHN5c3RlbTphdXRoZW50aWNhdGVk",
                  "mcm.ibm.com/user-identity": "c3lzdGVtOnNlcnZpY2VhY2NvdW50Omt1YmUtc3lzdGVtOmRlZmF1bHQ=",
                },
                "creationTimestamp": "2018-08-13T16:56:41Z",
                "finalizers": Array [
                  "finalizer.hcm.ibm.com",
                ],
                "labels": Object {
                  "cloud": "IBM",
                  "datacenter": "toronto",
                  "environment": "Dev",
                  "name": "mycluster.icp",
                  "owner": "marketing",
                  "region": "US",
                  "vendor": "ICP",
                },
                "name": "mycluster.icp",
                "namespace": "default",
                "resourceVersion": "136558",
                "selfLink": "/apis/clusterregistry.k8s.io/v1alpha1/namespaces/default/clusters/mycluster.icp",
                "uid": "d9f3a5aa-9f19-11e8-855e-f2b998610544",
              },
              "spec": Object {
                "authInfo": Object {},
                "kubernetesApiEndpoints": Object {
                  "serverEndpoints": Array [
                    Object {
                      "serverAddress": "9.42.80.212:8001",
                    },
                  ],
                },
              },
              "status": Object {
                "conditions": Array [
                  Object {
                    "lastHeartbeatTime": "2018-08-15T19:41:20Z",
                    "lastTransitionTime": null,
                    "status": "",
                    "type": "OK",
                  },
                ],
              },
            },
          ],
          "kind": "ClusterList",
          "metadata": Object {
            "resourceVersion": "136667",
            "selfLink": "/apis/clusterregistry.k8s.io/v1alpha1/clusters",
          },
          "statusCode": "",
          "statusMessage": "",
        },
        "statusCode": "",
      },
    },
  },
}
`;

exports[`Platform Api Resolver Get Automated Import Status should return error msg 1`] = `
Object {
  "data": Object {
    "getAutomatedImportStatus": null,
  },
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 13,
          "line": 3,
        },
      ],
      "message": "namespace and name are required for getAutomatedImportStatus",
      "path": Array [
        "getAutomatedImportStatus",
      ],
    },
  ],
}
`;

exports[`Platform Api Resolver Start Automated Import Process 1`] = `
Object {
  "data": Object {
    "automatedImport": null,
  },
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 13,
          "line": 3,
        },
      ],
      "message": "Cannot read property 'includes' of undefined",
      "path": Array [
        "automatedImport",
      ],
    },
  ],
}
`;

exports[`Platform Api Resolver Start Automated Import Process should return error msg 1`] = `
Object {
  "data": Object {
    "automatedImport": null,
  },
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 13,
          "line": 3,
        },
      ],
      "message": "Body, namespace, and name are required for automatedImport",
      "path": Array [
        "automatedImport",
      ],
    },
  ],
}
`;

exports[`Platform Api Resolver createCluster test that we can create cluster correctly 1`] = `
Object {
  "data": Object {
    "createCluster": null,
  },
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 17,
          "line": 3,
        },
      ],
      "message": "Cannot read property 'includes' of undefined",
      "path": Array [
        "createCluster",
      ],
    },
  ],
}
`;

exports[`Platform Api Resolver createCluster test that we get an error when cluster not provided 1`] = `
Object {
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 54,
          "line": 3,
        },
      ],
      "message": "Expected type JSON!, found null.",
    },
  ],
}
`;

exports[`Platform Api Resolver createCluster test that we get an error when namespace not provided 1`] = `
Object {
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 45,
          "line": 3,
        },
      ],
      "message": "Syntax Error: Expected Name, found {",
    },
  ],
}
`;

exports[`Platform Api Resolver createCluster test with all required fields but returns with error 1`] = `
Object {
  "data": Object {
    "createCluster": null,
  },
  "errors": Array [
    Object {
      "locations": Array [
        Object {
          "column": 17,
          "line": 3,
        },
      ],
      "message": "Cannot read property 'includes' of undefined",
      "path": Array [
        "createCluster",
      ],
    },
  ],
}
`;
